buildscript {
  repositories {
    jcenter()
    maven {
        url "https://packages.confluent.io/maven/"
    }
  }
  dependencies {
  }
}

plugins {
  id "java"
  id "application"
  id "idea"
  id "com.google.cloud.tools.jib" version "2.7.1"
  id "com.github.johnrengelman.shadow" version "6.1.0"
  id "maven"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
version = "0.0.1"

repositories {
  jcenter()

  maven {
    url "https://packages.confluent.io/maven"
  }
}

apply plugin: "com.github.johnrengelman.shadow"

dependencies {
  implementation "org.slf4j:slf4j-simple:1.7.30"
  implementation "com.google.code.gson:gson:2.8.6"
  implementation "org.apache.kafka:kafka-clients:6.1.0-ccs"
  implementation "org.apache.kafka:kafka-streams:6.1.0-ccs"
  implementation "io.confluent:kafka-streams-avro-serde:6.1.0"

  testImplementation "org.apache.kafka:kafka-streams-test-utils:2.5.0"
  testImplementation "junit:junit:4.13.1"
  testImplementation "org.assertj:assertj-core:3.19.0"
}

test {
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
    events "passed", "skipped", "failed"
    exceptionFormat "full"
  }
}

jar {
  manifest {
    attributes(
        "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
        "Main-Class": "io.confluent.ps.convert.GzipStream"
    )
  }
}

shadowJar {
  archiveBaseName = "gzip-stream"
  archiveClassifier = ""
}

// Define the main class for the application
mainClassName = "io.confluent.ps.convert.GzipStream"

clean {
}

idea {
  module {
    sourceDirs += file("${buildDir}/generated-main-proto-java/")
  }
}